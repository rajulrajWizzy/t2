# CoWorks API Collection
# Import this file in Postman for easy testing of all endpoints

# Authentication APIs

# Customer Authentication
# Register a new customer
curl -X POST "{{baseUrl}}/api/auth/register" \
  -H "Content-Type: application/json" \
  -d '{
    "email": "customer@example.com",
    "password": "CustomerPassword123",
    "name": "John Doe",
    "phone": "+1234567890"
  }'

# Login with customer credentials
curl -X POST "{{baseUrl}}/api/auth/login" \
  -H "Content-Type: application/json" \
  -d '{
    "email": "customer@example.com",
    "password": "CustomerPassword123"
  }'

# Request password reset for customer
curl -X POST "{{baseUrl}}/api/auth/reset-password/request" \
  -H "Content-Type: application/json" \
  -d '{
    "email": "customer@example.com"
  }'

# Reset password with token
curl -X POST "{{baseUrl}}/api/auth/reset-password/confirm" \
  -H "Content-Type: application/json" \
  -d '{
    "token": "reset-token-from-email",
    "password": "NewPassword123"
  }'

# Verify customer token
curl -X GET "{{baseUrl}}/api/auth/verify" \
  -H "Authorization: Bearer {{customerToken}}"

# Admin Authentication
# Login with admin credentials
curl -X POST "{{baseUrl}}/api/admin/auth/login" \
  -H "Content-Type: application/json" \
  -d '{
    "username": "admin",
    "password": "AdminPassword123"
  }'

# Branch APIs

# Get all branches
curl -X GET "{{baseUrl}}/api/branches" \
  -H "Authorization: Bearer {{customerToken}}"

# Get branch by ID
curl -X GET "{{baseUrl}}/api/branches/1" \
  -H "Authorization: Bearer {{customerToken}}"

# Admin branch management
curl -X POST "{{baseUrl}}/api/admin/branches" \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer {{adminToken}}" \
  -d '{
    "name": "New Branch",
    "location": "123 Main St",
    "short_code": "NBR001",
    "contact_email": "branch@example.com",
    "contact_phone": "+1234567890",
    "opening_time": "09:00",
    "closing_time": "18:00",
    "is_active": true
  }'

# Update branch
curl -X PUT "{{baseUrl}}/api/admin/branches/1" \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer {{adminToken}}" \
  -d '{
    "name": "Updated Branch Name",
    "opening_time": "08:00"
  }'

# Seating Type APIs

# Get all seating types
curl -X GET "{{baseUrl}}/api/seating-types" \
  -H "Authorization: Bearer {{customerToken}}"

# Get seating type by ID
curl -X GET "{{baseUrl}}/api/seating-types/1" \
  -H "Authorization: Bearer {{customerToken}}"

# Admin seating type management
curl -X POST "{{baseUrl}}/api/admin/seating-types" \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer {{adminToken}}" \
  -d '{
    "name": "Premium Desk",
    "short_code": "PDK",
    "description": "Premium desk with ergonomic chair",
    "price_per_hour": 1000,
    "price_per_day": 5000,
    "price_per_month": 90000,
    "capacity": 1,
    "quantity_options": [1, 2, 5, 10],
    "cost_multiplier": {
      "2": 1.9,
      "5": 4.5,
      "10": 8.5
    }
  }'

# Update seating type
curl -X PUT "{{baseUrl}}/api/admin/seating-types/1" \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer {{adminToken}}" \
  -d '{
    "name": "Updated Premium Desk",
    "price_per_hour": 1200
  }'

# Booking APIs

# Create a new booking
curl -X POST "{{baseUrl}}/api/bookings" \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer {{customerToken}}" \
  -d '{
    "branch_id": 1,
    "seating_type_id": 1,
    "start_time": "2023-08-15T10:00:00Z",
    "end_time": "2023-08-15T15:00:00Z",
    "quantity": 1
  }'

# Get all bookings for the authenticated customer
curl -X GET "{{baseUrl}}/api/bookings" \
  -H "Authorization: Bearer {{customerToken}}"

# Get booking by ID
curl -X GET "{{baseUrl}}/api/bookings/1" \
  -H "Authorization: Bearer {{customerToken}}"

# Cancel booking
curl -X PUT "{{baseUrl}}/api/bookings/1/cancel" \
  -H "Authorization: Bearer {{customerToken}}"

# Admin get all bookings
curl -X GET "{{baseUrl}}/api/admin/bookings" \
  -H "Authorization: Bearer {{adminToken}}"

# Payment APIs

# Create payment intent
curl -X POST "{{baseUrl}}/api/payments/create-intent" \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer {{customerToken}}" \
  -d '{
    "booking_id": 1,
    "amount": 5000
  }'

# Verify payment
curl -X POST "{{baseUrl}}/api/payments/verify" \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer {{customerToken}}" \
  -d '{
    "razorpay_payment_id": "pay_123456789",
    "razorpay_order_id": "order_123456789",
    "razorpay_signature": "signature",
    "booking_id": 1
  }'

# Admin get all payments
curl -X GET "{{baseUrl}}/api/admin/payments" \
  -H "Authorization: Bearer {{adminToken}}"

# Profile APIs

# Get customer profile
curl -X GET "{{baseUrl}}/api/profile" \
  -H "Authorization: Bearer {{customerToken}}"

# Update customer profile
curl -X PUT "{{baseUrl}}/api/profile" \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer {{customerToken}}" \
  -d '{
    "name": "Updated Name",
    "phone": "+9876543210"
  }'

# Upload profile picture
curl -X POST "{{baseUrl}}/api/profile/upload-picture" \
  -H "Content-Type: multipart/form-data" \
  -H "Authorization: Bearer {{customerToken}}" \
  -F "profile_picture=@/path/to/picture.jpg"

# Support Ticket APIs

# Customer Support APIs

# Get all support tickets
curl -X GET "{{baseUrl}}/api/support/tickets" \
  -H "Authorization: Bearer {{customerToken}}"

# Get support ticket by ID with messages
curl -X GET "{{baseUrl}}/api/support/tickets/1" \
  -H "Authorization: Bearer {{customerToken}}"

# Create a new support ticket
curl -X POST "{{baseUrl}}/api/support/tickets" \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer {{customerToken}}" \
  -d '{
    "title": "Issue with booking",
    "category": "BOOKING",
    "description": "I cannot cancel my booking",
    "branch_id": 1,
    "branch_code": "BR001",
    "seating_type_id": 1,
    "seating_type_code": "DK001",
    "booking_id": 123
  }'

# Reopen a closed ticket
curl -X PUT "{{baseUrl}}/api/support/tickets/1" \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer {{customerToken}}" \
  -d '{
    "action": "reopen",
    "message": "The issue still persists"
  }'

# Add message to support ticket
curl -X POST "{{baseUrl}}/api/support/tickets/messages" \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer {{customerToken}}" \
  -d '{
    "ticket_id": 1,
    "message": "Any updates on this issue?"
  }'

# Admin Support APIs

# Get all support tickets (admin)
curl -X GET "{{baseUrl}}/api/admin/support/tickets" \
  -H "Authorization: Bearer {{adminToken}}"

# Get support ticket by ID with messages (admin)
curl -X GET "{{baseUrl}}/api/admin/support/tickets/1" \
  -H "Authorization: Bearer {{adminToken}}"

# Update ticket status (admin)
curl -X PUT "{{baseUrl}}/api/admin/support/tickets/1" \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer {{adminToken}}" \
  -d '{
    "status": "IN_PROGRESS",
    "assigned_to": 2
  }'

# Close ticket (admin)
curl -X PUT "{{baseUrl}}/api/admin/support/tickets/1/close" \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer {{adminToken}}" \
  -d '{
    "resolution_note": "Issue has been resolved"
  }'

# Add message to support ticket (admin)
curl -X POST "{{baseUrl}}/api/admin/support/tickets/1/messages" \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer {{adminToken}}" \
  -d '{
    "message": "We are looking into this issue"
  }'

# Admin Stats APIs

# Get dashboard statistics 
curl -X GET "{{baseUrl}}/api/admin/stats/dashboard" \
  -H "Authorization: Bearer {{adminToken}}"

# Get booking statistics
curl -X GET "{{baseUrl}}/api/admin/stats/bookings" \
  -H "Authorization: Bearer {{adminToken}}"

# Get revenue statistics
curl -X GET "{{baseUrl}}/api/admin/stats/revenue" \
  -H "Authorization: Bearer {{adminToken}}"

# Get seating type usage statistics
curl -X GET "{{baseUrl}}/api/admin/stats/seating-types" \
  -H "Authorization: Bearer {{adminToken}}" 